//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackupUtil.Core.Ressources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings_fr {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings_fr() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BackupUtil.Core.Ressources.Strings.fr", typeof(Strings_fr).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Les chemins d&apos;accès source et cible ne peuvent pas être identiques.
        /// </summary>
        internal static string errorSameSourceTarget {
            get {
                return ResourceManager.GetString("errorSameSourceTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Le chemin d&apos;accès source est un dossier, le chemin d&apos;accès cible ne peut pas être un fichier.
        /// </summary>
        internal static string errorSourceDirTargetFile {
            get {
                return ResourceManager.GetString("errorSourceDirTargetFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Le chemin d&apos;accès source est un fichier, le chemin d&apos;accès cible ne peut pas être un dossier.
        /// </summary>
        internal static string errorSourceFileTargetDir {
            get {
                return ResourceManager.GetString("errorSourceFileTargetDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Le chemin d&apos;accès source ne peut pas être un sous-répertoire du chemin d&apos;accès cible.
        /// </summary>
        internal static string errorSourceInTarget {
            get {
                return ResourceManager.GetString("errorSourceInTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fichier ou dossier source introuvable.
        /// </summary>
        internal static string errorSourceNotFound {
            get {
                return ResourceManager.GetString("errorSourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Le chemin d&apos;accès source n&apos;est pas valide.
        /// </summary>
        internal static string errorSourcePath {
            get {
                return ResourceManager.GetString("errorSourcePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Le chemin d&apos;accès cible ne peut pas être un sous-répertoire du chemin d&apos;accès spurce.
        /// </summary>
        internal static string errorTargetInSource {
            get {
                return ResourceManager.GetString("errorTargetInSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Le chemin d&apos;accès cible n&apos;est pas valide.
        /// </summary>
        internal static string errorTargetPath {
            get {
                return ResourceManager.GetString("errorTargetPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Le chemin d&apos;accès cible ne peut pas se terminer par &apos;\\&apos;.
        /// </summary>
        internal static string errorTargetPathEnd {
            get {
                return ResourceManager.GetString("errorTargetPathEnd", resourceCulture);
            }
        }
    }
}
